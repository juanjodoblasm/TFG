---
title: "Análisis exploratorio"
author: Juanjo Doblas
format: 
  html:
    toc: true
    toc-depth: 3
editor: visual
execute:
  echo: false
  message: false
---

## 1 - Introducción

En este documento realizaremos un análisis exploratorio de los datos que se encuentran en el archivo `causas_muerte.xls`.

Esta tabla de datos contiene información sobre las causas de muerte en la mayoría de países del mundo desde el año 1990 hasta el 2019, así como algunas covariables.

Primero de todo cargaremos las librerías necesarias para realizar el análisis.

```{r librerias, include=FALSE}
library(readxl)
library(tidyverse)
library(compositions)
library(psych)
library(NBZIMM)
library(factoextra)
library(ggplot2)
library(ggfortify)
library(gridExtra)
```

Ahora, carguemos nuestra base de datos y presentemos un resumen.

```{r dataset, warning=FALSE}
data <- read_excel("causas_muerte.xls") %>% 
  # Transformamos la variable año en ordinal
  mutate(año = as.ordered((año))) %>% 
  # Creamos una variables con el total de muertes
  rowwise() %>%  mutate(total_muertes = sum(c_across(meningitis:hepatitis_aguda)), .after = hepatitis_aguda) %>% ungroup()

data %>% glimpse
```

### 1.1 - Descripción de las variables

Realicemos una pequeña descripción de cada variable:

-   *pais*: país del que proceden los datos. Veamos cuántos países se recogen.

```{r numero paises}
data[, "pais"] %>% unique
```

-   *codigo_Pais*: código de 3 letras para los nombres de los países según la norma ISO 3166-1 alfa-3.

-   *año*: año en el que se recogen los datos. Veamos que no falta ningún año en ningún país desde 1990 hasta 2019. Lo veremos en la siguiente tabla que recoge el número de muestras, y por tanto de países, por cada año.

```{r paises años}
data[, "año"] %>% table
```

-   *población*: número de habitantes de cada país en cada año.

Las variables desde la columna *meningitis* hasta *hepatitis_aguda* recogen el número de muertes por la causa que da nombre a la variable en cada país y cada año. Nos interesa saber cuantos conteos de ceros hay en cada variable. Lo vemos en la siguiente tabla:

```{r conteo ceros}
causas_muerte <- data %>% dplyr::select(meningitis:hepatitis_aguda) 

tabla_ceros <- causas_muerte %>% summarise(across(everything(), ~ sum(. == 0)))

tabla_ceros %>% glimpse
```

```{r porcentaje ceros}
100*sum(tabla_ceros) / (nrow(causas_muerte)*ncol(causas_muerte))
```

Observamos que en las causas de muerte hay aproximadamente un 7,78% de ceros. Sin embargo, en algunas variables este porcentaje supera el 50%, por lo que estamos ante un modelo con exceso de ceros o *ZI* (por sus siglas en inglés *Zero-inflated model*). Esta característica la tendremos que tener en cuenta en el análisis.

-   *total_muertes*: Es el número de muertes totales que ha habido en cada año en cada país. Es la suma de todas las causas de muerte.

-   *pib*: producto interior bruto en millones de dólares. Expresa el valor monetario de la producción de bienes y servicios de demanda final.

-   *idh*: índice de desarrollo humano. Se calcula en base a la esperanza de vida, el nivel de educación y el ingreso per cápita.

-   *esperanza_vida_m*: esperanza de vida de las mujeres en años.

-   *esperanza_vida_h*: esperanza de vida de los hombres en años.

-   *esperanza_vida*: esperanza de vida de la población en años.

-   *emisiones_CO2*: cantidad de CO2 emitido en millones de toneladas.

-   *emisiones_CO2_PIB*: cantidad de CO2 emitido por cada 1000 dólares de PIB en kilogramos.

-   *emisiones_CO2_per_capita*: cantidad de CO2 emitido per cápita en toneladas.

## 2 - Tratamiento de datos composicionales

Las variables que nos dan información sobre las causas de muerte tienen naturaleza composicional. En efecto, todas las entradas son positivas, ya que son conteos de muertes; y la única información relevante en cada fila es la contenida en su vector de proporciones, ya que este nos da el porcentaje de muertes por cada causa.

Antes de poder aplicar técnicas de análisis de datos composicionales hay que tratar los datos siguiendo los pasos siguientes:

1.  Se sustituyen (*imputan*) los ceros.

2.  Se transforman logarítmicamente los datos.

### 2.1 - Imputación de ceros

Hay varias estrategias para imputar ceros. Nosotros sustituiremos los ceros por 0,65 ya que el porcentaje de ceros es menor al 10%.

```{r imputacion ceros}
causas_muerte_imp <- causas_muerte %>% mutate(across(where(is.numeric), ~ replace(., . == 0, 0.65)))
```

### 2.2 - Transformación CLR

Utilizaremos la transformación logarítmica centrada, que consiste en dividir cada entrada por la media geométrica de la fila y aplicarle un logaritmo.

```{r transformacion clr}
causas_muerte_clr <- causas_muerte_imp %>% clr %>% as_tibble()
data_clr <- data
data_clr[, 5:35] <- causas_muerte_clr

causas_muerte_clr %>% glimpse
```

## 3 - Matriz de correlaciones

Analicemos la matriz de correlaciones de las causas de muerte y las covariables. Usaremos la correlación de Spearman y no la de Pearson ya que nuestras variables de interés, las causas de muerte, son discretas.

```{r matriz correlacion, fig.height=15, fig.width=30}
data_clr %>%
  dplyr::select(where(is.numeric)) %>%
  cor(., method = "spearman") %>% 
  corPlot(., cex = 1, xsrt = 30, cex.axis = 1, main = "Matriz de correlaciones")
```

Fijémonos primero en las correlaciones entre causas de muerte y covariables. La variable *población* apenas tiene correlación con las causas de muerte. En *pib*, *emisiones_CO2* y *emisiones_CO2_PIB* tampoco vemos muchas correlaciones altas. Estas se ven sobre todo en *emisiones_CO2_per_capita* y en las variables que explican la esperanza de vida, incluido el IDH ya que la esperanza de vida es un factor importante a la hora de calcular el índice y se puede ver en la alta correlación entre el IDH y la esperanza de vida. Estas variables están altamente correlacionadas con muchas causas de muerte, tanto positivamente como negativamente. Veamos a qué se podría deber esto. Normalmente, la poca esperanza de vida y las pocas emisiones de CO2 per cápita se suelen asociar a países pocos desarrollados y podemos ver en las correlaciones negativas las enfermedades que suelen ser comunes en estos países: meningitis, deficiencias nutricionales, malaria, enfermedades diarreicas, etc. Luego, en las correlaciones positivas, podemos ver enfermedades asociadas con la vejez: alzheimer, parkinson y enfermedades cardiovasculares; así como trastornos como consecuencia de drogas o alcohol, autolesiones, neoplasias (cánceres), enfermedades crónicas, etc.

Por último, vemos que hay algunas enfermedades bastante correlacionadas y otras que no. La correlación positiva que más destaca es entre deficiencias nutricionales y desnutrición energética (causas muy parecidas), con un valor de $0.98$; mientras que la correlación negativa más destacada es entre neoplasias y trastornos maternos, con un valos de $-0.89$. Las dos correlaciones más pequeñas con un valor de $0.00$ corresponden a infecciones respiratorias con malaria; e infecciones respiratorias con neoplasias.

Cabe destacar el caso de la variable *total_muertes* que no tiene ninguna correlación considerable exceptuando con *población* (obviamente), *emisiones_CO2* y *pib*, aunque estas dos últimas también están altamente correlacionadas con *población*.

## 4 - Tendencias temporales

En este apartado vamos a estudiar de manera global las tendencias temporales de cada enfermedad.

Vamos a trabajar con un tibble donde sumaremos todas las causas por cada año, con lo que nos quedarán $30$ filas, una para cada año, y los conteos serán mundiales.

```{r data mundial}
causas_muerte_global <- data %>% dplyr::select(año, meningitis:hepatitis_aguda) %>% group_by(año) %>% summarise(across(everything(), ~ sum(.)), .groups = "drop")

causas_muerte_global %>% glimpse
```

Ahora lo transformamos en una serie temporal y elaboramos los gráficos.

```{r serie temporal}
causas_muerte_global.ts <- ts(causas_muerte_global[-1], start = c(1990), end = c(2019), frequency = 1)
```

```{r graficos 1, fig.height=10, fig.width=10}
plot.ts(causas_muerte_global.ts[, 1:10], main = "")
```

En estos primeros diez gráficos podemos observar un claro descenso constante del número de muertes por meningitis, deficiencias nutricionales, ahogo y transtornos maternos. A partir del 2010 también hay un descenso de las muertes por malaria. Por otro lado, hay un aumento constante de las muertes por alzheimer, parkinson y trantornos por consecuencia de drogas. Luego, el VIH alcanzó el máximo de muertes en 2004 y desde entonces han ido bajando. De forma similar, las muertes por violencia interpersonal alcanzaron el máximo en 2002 y después bajaron hasta mantenerse alrededor de 420000 muertes, un número superior a las 380000 muertes en 1990.

```{r graficos 2, fig.height=10, fig.width=10}
plot.ts(causas_muerte_global.ts[, 11:20], main = "")
```

Aquí podemos apreciar el descenso de muertes en tuberculosis, infecciones respiratorias, trastornos neonatales y enfermedades diarreicas. En cuanto ascenso de muertes podemos ver las causas enfermedades cardiovasculares, trastornos como consecuencia del alcohol y neoplasias. Por otro lado, las autolesiones y exposiciones al ambiente y temperatura tuvieron una subida con posterior bajada de tal forma que en 2019 hay los mismos conteos que en 1990 aproximadamente. Cabe destacar el caso de la exposición a las fuerzas de la naturaleza, con un nivel aproximadamente constante por debajo de 50000 exceptuando algunos años que rozan las 250000 muertes.

```{r graficos 3, fig.height=7, fig.width=10}
plot.ts(causas_muerte_global.ts[, 21:26], main = "")
```

```{r graficos 4, fig.height=6, fig.width=10}
plot.ts(causas_muerte_global.ts[, 27:31], main = "")
```

En estos últimos once gráficos podemos ver un ascenso en diabetes mellitus, enfermedades crónicas, cirrosis crónicas, enfermedades digestivas y lesiones carretera, aunque esta última ha bajado con respecto a los últimos diez años. También vemos un descenso en envenenamientos, desnutriciones energéticas, exposición al fuego y sustancias calientes y hepatitis aguda. Las causas por conflictos terroristas han mantenido un nivel relativamente constante alrededor de 10000 muertes con un pico en 50000 en el año 1994.

## 5 - Análisis en componentes principales

En este apartado realizaremos un análisis en componentes principales (ACP). Nos restringiremos a los datos que proporcionan los países europeos. Primero vamos a filtrar los países de este continente en nuestra base de datos.

```{r datos europa}
# Lista de países de Europa
paises_eu <- c("Albania", "Andorra", "Armenia", "Austria", "Azerbaiyán", 
                   "Bélgica", "Bielorrusia", "Bosnia-Herzegovina", "Bulgaria", 
                   "Chipre", "Croacia", "Dinamarca", "Eslovaquia", "Eslovenia", 
                   "España", "Estonia", "Finlandia", "Francia",
                   "Georgia (desambiguación)", "Grecia", "Hungría", "Islandia", 
                   "Irlanda (isla)", "Italia", "Kazajistán", "Letonia", "Lituania",
                   "Luxemburgo", "Malta", "Moldavia", "Mónaco", "Montenegro",
                   "Noruega", "Países Bajos", "Polonia", "Portugal", "Reino Unido",
                   "Republica Checa", "República de Macedonia", "Rumania", "Rusia",
                   "Serbia", "Suecia", "Suiza", "Turquía", "Ucrania")

# Filtramos los datos
data_eu <- data %>% filter(pais %in% paises_eu)
```

Antes de realizar el ACP veamos cómo se distribuyen las muertes totales por año.

```{r distribucion muertes por año, fig.width=15, fig.height=10}
total_muertes_año_eu <- data_eu %>% select(año, meningitis:hepatitis_aguda) %>% group_by(año) %>% summarise(across(everything(), ~ sum(.)))

total_muertes_año_eu %>% 
  pivot_longer(cols = -año, names_to = "causa_muerte", values_to = "muerte") %>%
  ggplot(aes(x = causa_muerte, y = muerte)) +
  geom_violin(trim = FALSE, fill = "lightblue", width = 2) +
  #geom_boxplot(width = 0.1, color = "black", alpha = 0.6) +
  scale_y_log10() +
  theme_minimal() +
  labs(x = "Causa de muerte", y = "Número de muertes") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Como podemos ver, hay algunas causas de defunción que apenas causan impacto. Por ello, con el objetivo de reducir dimensionalidad, vamos a agruparlas siguiendo el criterio de la OMS en [este enlace](https://icd.who.int/browse/2024-01/mms/en). Los grupos que nos quedan son los siguientes:

-   Enfermedades infecciosas o parasitarias (*enf_infec_paras*). En este grupo incluimos *meningitis*, *malaria*, *VIH* y *tuberculosis*.

-   Enfermedades del sistema nervioso (*enf_sist_nervioso*). En este grupo incluimos *alzheimer* y *parkinson*.

-   Enfermedades endocrinas, nutricionales o metabólicas (*enf_metabolicas*). En este grupo incluimos *def_nutricionales*, *diabetes_mellitus* y *desnutrición_energetica*.

-   Otras causas (*otras_causas*). En este grupo incluimos *ahogo* y *violencia_inter*.

-   Embarazo, parto o puerperio (*trastornos_maternos*). En este grupo incluimos *trastornos_maternos*.

-   Trastornos mentales, del comportamiento o del desarrollo neurológico (*trastornos_mentales*). En este grupo incluimos *trastornos_cons_drogas* y *trastornos_Cons_alcohol*.

-   Enfermedades del sistema circulatorio (*enf_cardiovasculares*). En este grupo incluimos *enf_cardiovasculares*.

-   Enfermedades del sistema respiratorio (*infecciones_respi*). En este grupo incluimos *infecciones_respi*.

-   Afecciones originadas en el período perinatal (*trastornos_neonatales*). En este grupo incluimos *trastornos_neonatales*.

-   Causas externas de morbilidad o mortalidad (*causas_externas*). En este grupo incluimos *autolesiones*, *exp_fuer_naturaleza*, *conflicto_terrorismo* y *lesiones_carretera*.

-   Enfermedades del sistema digestivo (*enf_sist_digestivo*). En este grupo incluimos *enf_diarreicas*, *cirrosis_crónicas*, *enfermedades_digestivas* y *hepatitis_aguda*.

-   Lesiones, envenenamientos u otras consecuencias de causas externas (*envenenamientos_exposiciones*). En este grupo incluimos *exp_amb_temperatura*, *envenenamientos* y *fuego_calientes*.

-   Neoplasias (*neoplasias*). En este grupo incluimos *neoplasias*.

-   Enfermedades crónicas (*enf_cronicas*). En este grupo incluimos *enfermedad_crónica* y *enfermedades_cronicas*.

```{r dudas clasificacion}
# Como se en que grupo esta. p.e. ahogo
# como diferencio causas externas de morbilidad o mortalidad con lesiones, envenenamientos u otras consecuencias de causas externas. Las agrupo en uno?
```

Creemos la nueva base de datos con las causas de muerte agrupadas.

```{r causas agrupadas}
data_eu_agrupado <- data_eu %>%
  mutate(
    enf_infec_paras = rowSums(select(., meningitis, malaria, VIH, tuberculosis)),
    enf_sist_nervioso = rowSums(select(., alzheimer, parkinson)),
    enf_metabolicas = rowSums(select(., def_nutricionales, diabetes_mellitus, 
                                     desnutrición_energetica)),
    otras_causas = rowSums(select(., ahogo, violencia_inter)),
    trastornos_mentales = rowSums(select(., trastornos_cons_drogas, trastornos_Cons_alcohol)),
    causas_externas = rowSums(select(., autolesiones, exp_fuer_naturaleza, conflicto_terrorismo,
                                     lesiones_carretera)),
    enf_sist_digestivo = rowSums(select(., enf_diarreicas, cirrosis_crónicas,
                                        enfermedades_digestivas, hepatitis_aguda)),
    envenenamientos_exposiciones = rowSums(select(., exp_amb_temperatura, envenenamientos,
                                                  fuego_calientes)),
    enf_cronicas = rowSums(select(., enfermedad_crónica, enfermedades_cronicas)),
    .after = poblacion
  ) %>%
  select(-meningitis, -malaria, -VIH, -tuberculosis,
         -alzheimer, -parkinson,
         -def_nutricionales, -diabetes_mellitus, -desnutrición_energetica,
         -ahogo, -violencia_inter,
         -trastornos_cons_drogas, -trastornos_Cons_alcohol,
         -autolesiones, -exp_fuer_naturaleza, -conflicto_terrorismo, -lesiones_carretera,
         -enf_diarreicas, -cirrosis_crónicas, -enfermedades_digestivas, -hepatitis_aguda,
         -exp_amb_temperatura, -envenenamientos, -fuego_calientes,
         -enfermedad_crónica, -enfermedades_cronicas) %>% 
  relocate(trastornos_maternos, .after = otras_causas) %>%
  relocate(enf_cardiovasculares:trastornos_neonatales, .after = trastornos_mentales) %>%
  relocate(neoplasias, .after = envenenamientos_exposiciones)
```

Veamos de nuevo cómo se distribuyen las muertes totales por año, ahora con la nueva agrupación.

```{r distribucion muertes agrupadas por año, fig.height=10}
total_muertes_agrupadas_año_eu <- data_eu_agrupado %>% select(año, enf_infec_paras:enf_cronicas) %>% group_by(año) %>% summarise(across(everything(), ~ sum(.)))

total_muertes_agrupadas_año_eu %>% 
  pivot_longer(cols = -año, names_to = "causa_muerte", values_to = "muerte") %>%
  ggplot(aes(x = causa_muerte, y = muerte)) +
  geom_violin(trim = FALSE, fill = "lightblue", width = 2) +
  #geom_boxplot(width = 0.1, color = "black", alpha = 0.6) +
  scale_y_log10() +
  theme_minimal() +
  labs(x = "Causa de muerte", y = "Número de muertes") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Ahora sí, realicemos el ACP. Haremos un primer análisis con un conjunto de datos donde para cada país tendremos la mediana de cada causa de muerte con respecto al tiempo. Construyamos primero este conjunto de datos.

```{r mediana temporal muertes}
data_eu_agrupado_medianas <- data_eu_agrupado %>%
  group_by(pais) %>%
  summarise(across(enf_infec_paras:enf_cronicas, median)) %>%
  ungroup() 
```

Ahora, le aplicaremos la transformación *clr* y centraremos los datos. Notemos que no va a hacer falta imputar ceros ya que en ningún grupo de causas la mediana es 0. Haremos dos ACP: uno con los datos escalados y otro sin escalar. Empecemos con los datos sin escalar.

```{r mediana temporal muertes clr}
data_eu_g_m_clr <- data_eu_agrupado_medianas

data_eu_g_m_clr[, 2:15] <- data_eu_agrupado_medianas[, 2:15] %>% clr %>% as_tibble

n = nrow(data_eu_g_m_clr)

# Matriz de centrado
Hn = diag(n) - 1/n

# Datos centrados
data_cen <- Hn %*% as.matrix(data_eu_g_m_clr[, 2:15]) %>%
  as_tibble() %>%
  mutate(pais = data_eu_g_m_clr$pais, .before = enf_infec_paras)
```

Pasemos al estudio de las componentes principales. Calculamos los valores y vectores propios de la matriz de varianzas-covarianzas.

```{r matriz covarianzas}
S = cov(data_cen[, 2:15])
S
```

```{r ACP}
data_ACP = prcomp(data_cen[, 2:15], scale = FALSE)
data_ACP_scaled = prcomp(data_cen[, 2:15], scale = TRUE)

rownames(data_ACP$x) <- unique(data_eu$codigo_Pais)
rownames(data_ACP_scaled$x) <- unique(data_eu$codigo_Pais)
```

```{r veps}
veps = data_ACP$rotation
veps_scaled = data_ACP_scaled$rotation

cat("Vectores propios (datos sin escalar)\n")
veps
cat("Vectores propios (datos escalados)\n")
veps_scaled
```

En el caso de los datos sin escalar, la primera componente principal le da peso mayoritariamente a la variable *trastornos_maternos* y la segunda componente principal da peso a las variables *envenamientos_ecposiciones*, *otras_causas* y *enf_metabolicas*, en ese orden.

Por otro lado, en el caso de datos escalados, podemos ver que entre la primera y segunda componente le dan peso a casi todas las variables.

```{r vaps}
vaps = get_eigenvalue(data_ACP)
vaps_scaled = get_eigenvalue(data_ACP_scaled)

cat("Valores propios (datos sin escalar)\n")
vaps
cat("Valores propios (datos escalados)\n")
vaps_scaled
```

```{r porcentajes variacion}
cat("Datos sin escalar\n")
fviz_eig(data_ACP, addlabels = TRUE, ylim = c(0,100))
cat("Datos escalados\n")
fviz_eig(data_ACP_scaled, addlabels = TRUE, ylim = c(0,100))
```

En ambos casos, a partir de la tabla y el gráfico podemos elegir tres componentes principales, ya que a partir de la cuarta componente el porcentaje de variabilidad no aumenta lo suficiente como para considerar una dimensión más. Sin embargo, con los datos sin escalar explicamos el $82,65\%$ de la variación y con los datos escalados el $73,74\%$. Representemos estas variables en el espacio.

```{r circulo correlacion dim1-dim2, fig.height=10, fig.width=10}
circ_cor <- fviz_pca_var(data_ACP, col.var = "contrib", repel = TRUE, axes = 1:2, title="Sin escalar")
circ_cor_scaled <- fviz_pca_var(data_ACP_scaled, col.var = "contrib", repel = TRUE, axes = 1:2, title = "Escalado")
circ_cor
circ_cor_scaled
```

```{r biplots dim1-dim2, fig.height=10, fig.width=10}
fviz_pca_biplot(data_ACP, col.var = "contrib", repel = TRUE, axes = 1:2, title="Sin escalar")

fviz_pca_biplot(data_ACP_scaled, col.var = "contrib", repel = TRUE, axes = 1:2, title = "Escalado")

```

```{r pruebas}
#suma = 0
#variable = "infecciones_respi"
#año = 2007
#for (i in 1:nrow(data_europa)) {
#  if (data_europa[i, "año"] == año)
#    suma = suma + data_europa[i, variable]
#}
#print(suma)
```

```{r ACP_anterior}
#Ahora, realicemos un análisis en componentes principales (ACP). Nos restringiremos a los datos que #proporcionan los países europeos y a algunas causas de muerte. El criterio de elección es coger las #principales causas de defunción según la ONU en [este #artículo](https://www.who.int/es/news-room/fact-sheets/detail/the-top-10-causes-of-death). La ONU #separa estas causas según la clasificación del Banco mundial del ingreso de los países que se puede #ver [aquí](https://blogs.worldbank.org/es/opendata/clasificacion-de-paises-del-banco-mundial-por-niv#el-de-ingreso-2024-25). Europa está compuesto mayoritariamente por países con ingresos altos, #exceptuando algunos países en la región de los balcanes y europa oriental, por lo que escogemos las #diez principales causas de defunción en los países con ingresos altos, que son:
#
#1.  Cardiopatía isquémica
#2.  Enfermedad de Alzheimer y otras demencias
#3.  Accidente cerebrovascular
#4.  Cáncer de tráquea, bronquios y pulmón
#5.  Enfermedad pulmonar obstructiva crónica (EPOC)
#6.  Infecciones de las vías respiratorias inferiores
#7.  Cáncer de colon y recto
#8.  Nefropatías
#9.  Cardiopatía hipertensiva
#10. Diabetes mellitus
#
#En las variables que tenemos en nuestra base de datos, estas causas se pueden agrupar en las #siguientes variables:
#
#1.  *enf_cardiovasculares*
#2.  *alzheimer*
#3.  *neoplasias*
#4.  *infecciones_respi*
#5.  *enfermedad_crónica*
#6.  *diabetes_mellitus*
#
#Creemos un nuevo subconjunto de datos restringiéndonos a países europeos y estas causas de muerte. #Será un subconjunto de los datos con la transformación *clr* aplicada. Además, vamos a centrar estos #datos, es decir, a restar la media de su respectiva columna.
#
#{r datos ACP}
## Lista de países de Europa
#paises_europa <- c("Albania", "Andorra", "Armenia", "Austria", "Azerbaiyán", 
#                   "Bélgica", "Bielorrusia", "Bosnia-Herzegovina", "Bulgaria", 
#                   "Chipre", "Croacia", "Dinamarca", "Eslovaquia", "Eslovenia", 
#                   "España", "Estonia", "Finlandia", "Francia",
#                   "Georgia (desambiguación)", "Grecia", "Hungría", "Islandia", 
#                   "Irlanda (isla)", "Italia", "Kazajistán", "Letonia", "Lituania",
#                   "Luxemburgo", "Malta", "Moldavia", "Mónaco", "Montenegro",
#                   "Noruega", "Países Bajos", "Polonia", "Portugal", "Reino Unido",
#                   "Republica Checa", "República de Macedonia", "Rumania", "Rusia",
#                   "Serbia", "Suecia", "Suiza", "Turquía", "Ucrania")
#
## Lista de causas de muerte
#causas_muerte_acp = c("enf_cardiovasculares", "alzheimer", "neoplasias",
#                      "infecciones_respi", "enfermedad_crónica", "diabetes_mellitus")
#
## Filtramos los datos
#data_ACP <- data %>% filter(pais %in% paises_europa) #%>% dplyr::select(all_of(causas_muerte_acp))
#
#causas_muerte_total <- colSums(data_ACP[, 5:35])
#
#data %>% mutate(nT = rowSums(data[5:35]) ) %>% 
#  mutate(Parkinson=parkinson/nT) %>% 
#  group_by(pais, año) %>% 
#  summarise(x=mean(Parkinson)) %>% 
#  ggplot(aes(x=reorder(pais,x, FUN=median ), y=x))+
#  geom_boxplot()+theme(legend.position="none")
#--
#
#
#{r}
#data_ACP_clr <- data2 %>% clr %>% as_tibble()
#
## Número de filas
#n = nrow(data_ACP)
#
## Matriz de centrado
#Hn = diag(n) - 1/n
#
## Datos centrados
#data_cen = Hn %*% as.matrix(data_ACP[, 2:7]) %>% as_tibble() %>% add_column(., pais = data_ACP$pais, #.before = 1)
#
#data_cen %>% glimpse
#--
#
#Calculamos los valores y vectores propios de la matriz de varianzas-covarianzas.
#
#{r ACP}
#datos_pca = prcomp(data_cen[, 2:7], scale = FALSE)
#--
#
#{r veps}
#veps = datos_pca$rotation
#veps
#--
#
#{r vaps}
#vaps = get_eigenvalue(datos_pca)
#vaps
#--
#
#{r porcentajes variacion}
#fviz_eig(datos_pca, addlabels = TRUE, ylim = c(0,100))
#--
#
#{r circulo correlacion dim1-dim2}
#circ_cor <- fviz_pca_var(datos_pca, col.var = "contrib", repel = TRUE, axes = 1:2)
#
#circ_cor
#--
#
#{r representacion individuos, fig.height=9, fig.width=8}
#autoplot(datos_pca, data = data_cen, loadings = TRUE, loadings.colour = 'blue', loadings.label = #TRUE, loadings.label.size = 3, label = FALSE, colour = 'pais') + theme(legend.position = "bottom")
#--
#
#{r pruebas}
## Por qué no es igual que data_ACP
#
#data2 <- data %>% filter(pais %in% paises_europa) %>% dplyr::select(all_of(causas_muerte_acp))
#
#data2clr <- data2 %>% clr %>% as_tibble()
#
## Dudas
#
## Primero clr y luego subconjunto o viceversa?
## Escalar o no para el ACP?

```

## 6 - Análisis en coordenadas principales

Realicemos también un análisis en coordenadas principales (o escalamiento multidimensional). Este análisis se hará sobre las causas de muerte. Por su naturaleza composicional, no podemos utilizar las distancias Euclídea o de Manhattan. En su lugar, utilizaremos la distancia de Aitchison, que es la distancia Euclídea entre dos muestras después de aplicar la transformación CLR. Mostremos las distancias entre los primeros 8 elementos de la tabla.

```{r matriz distancias}
causasdist <- dist(causas_muerte_clr)
as.matrix(causasdist)[1:8, 1:8]
ncol(causasdist)
```

Ahora, aplicamos el método de coordenadas principales con la función de R `cmdscale`, usando la matriz de distancias anterior y especificando $k = 2$ (dos componentes principales).

```{r mds}
# Tarda mucho
#causas_mds <- cmdscale(causasdist, k = 2) %>% 
#  as_tibble()

#causas_mds %>% 
 # slice_head(n = 15)
```

Por último, calculemos los coeficientes de precisión a partir de los valores propios de la matriz de productos cruzados.

```{r precision}
Q = as.matrix(causas_muerte_clr) %*% t(as.matrix(causas_muerte_clr))

# Tarda mucho
#vaps = eigen(Q)$values

#m_12 = (sum(abs(vaps[1:2])) / sum(abs(vaps))) * 100


#m_22 = (sum(vaps[1:2]^2)/ sum(vaps^2)) * 100
```

-   $m_{1,2} =$ `#m_12`
-   $m_{2,2} =$ `#m_22`

## 7 - Ajuste de modelos NBMM y NBZIMM

Vamos a ajustar los modelos NBMM y NBZIMM a los datos de países europeos. Un primer ajuste será intentar explicar una causa de muerte a partir de una covariable. Veamos los conteos de ceros que hay para los datos europeos.

```{r conteo ceros europa}
causas_muerte_eu <- data_eu %>% dplyr::select(meningitis:hepatitis_aguda) 

tabla_ceros_eu <- causas_muerte_eu %>% summarise(across(everything(), ~ sum(. == 0)))

tabla_ceros_eu %>% glimpse
```

```{r porcentaje ceros europa}
100*sum(tabla_ceros_eu) / (nrow(causas_muerte_eu)*ncol(causas_muerte_eu))
```

Vemos que el porcentaje total de ceros ha subido un punto porcentual respecto a los datos totales y también cabe resaltar el caso de malaria, con casi la totalidad de ceros.

Vamos a elegir explicar algunas variables a partir del idh, ya que esta covariable está altamente relacionada con el resto de covariables. Escogeremos meningitis, con un bajo conteo de ceros y alta correlación negativa con idh; hepatitis aguda, con un conteo medio de ceros y alta correlación negativa con idh; y malaria, con un alto conteo de ceros y alta correlación negativa con idh.

Primero, realicemos los ajustes con el modelo NBMM.

```{r modelo NBMM meningitis}
N = data_eu$total_muertes

m11 = glmm.nb(meningitis ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m11)
```

```{r modelo NBMM hepatitis aguda}
m12 = glmm.nb(hepatitis_aguda ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m12)
```

```{r modelo NBMM malaria}
m13 = glmm.nb(malaria ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m13)
```

Ahora ajustaremos el modelo ZINBMM.

```{r modelo ZINBMM meningitis}
m21 = glmm.zinb(meningitis ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m21)
```

```{r modelo ZINBMM hepatitis aguda}
m22 = glmm.zinb(hepatitis_aguda ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m22)
```

```{r modelo ZINBMM malaria}
m23 = glmm.zinb(malaria ~ idh + offset(log(N)), random = ~ 1 | pais, data = data_eu)

summary(m23)
```
